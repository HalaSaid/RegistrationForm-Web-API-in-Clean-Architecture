// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationForm.Persistence.Data.Context;

#nullable disable

namespace RegistrationForm.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240518180058_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegistrationForm.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("GovernmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("buildingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("flatNumber")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AddressId");

                    b.HasIndex("CityId");

                    b.HasIndex("GovernmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.City", b =>
                {
                    b.Property<int>("cityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cityId"));

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("governmentId")
                        .HasColumnType("int");

                    b.HasKey("cityId");

                    b.HasIndex("governmentId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.GovernateUserCount", b =>
                {
                    b.Property<int>("governateUserCountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("governateUserCountId"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("governmentId")
                        .HasColumnType("int");

                    b.HasKey("governateUserCountId");

                    b.HasIndex("governmentId");

                    b.ToTable("GovernateUserCounts");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.Government", b =>
                {
                    b.Property<int>("governmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("governmentId"));

                    b.Property<string>("governmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("governmentId");

                    b.ToTable("Governments");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<DateTime>("brithDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fristName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("middelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.Address", b =>
                {
                    b.HasOne("RegistrationForm.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistrationForm.Domain.Entities.Government", "Government")
                        .WithMany()
                        .HasForeignKey("GovernmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistrationForm.Domain.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Government");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.City", b =>
                {
                    b.HasOne("RegistrationForm.Domain.Entities.Government", "Government")
                        .WithMany("Cities")
                        .HasForeignKey("governmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Government");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.GovernateUserCount", b =>
                {
                    b.HasOne("RegistrationForm.Domain.Entities.Government", "Government")
                        .WithMany()
                        .HasForeignKey("governmentId");

                    b.Navigation("Government");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.Government", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("RegistrationForm.Domain.Entities.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
